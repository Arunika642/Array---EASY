class Solution {
public:
    bool check(vector<int>& nums) {
        int count=0;
        for(int i=1; i<nums.size();i++)
        {
            if(nums[i-1]>nums[i])
            {
                count++;
            }
        }
        if(nums[nums.size()-1]>nums[0]) count++;

        if(count<=1)
           return true;
        else
           return false;
    }
};

/*Intuition
Find how many times, the array is breaking the ascending order.
If it is breaking just once or not even once then it is sorted so return true, otherwise false.
Check if the last element (nums[nums.size()-1]) is greater than the first element (nums[0]). This handles the case where the decrease wraps around due to rotation.
*/



TO check Array is sorted and rotated.
class Solution {
public:
    bool check(vector<int>& nums) {
        int count=0;
        for(int i=1; i<nums.size();i++)
        {
            if(nums[i]<nums[i-1]) count++;
            
        }
        if(nums[nums.size()-1]>nums[0]) count++;
        if(count==1 || count==0) return true;
        return false;
    }
};
